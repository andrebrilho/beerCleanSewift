//
//  MainBeerInteractor.swift
//  ApiBeerCleanSwift
//
//  Created by André Brilho on 05/05/20.
//  Copyright (c) 2020 André Brilho. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MainBeerBusinessLogic {
    func didSelectRow(indexPath: IndexPath)
    func load()
}

protocol MainDataStore {
  var selectedBeer: MainBeer.Beer? { get set }
}

class MainBeerInteractor: MainBeerBusinessLogic, MainDataStore {

    var selectedBeer: MainBeer.Beer?
    var listBeer:[MainBeer.Beer] = []
    
    var worker: MainBeerWorker
    init(worker:MainBeerWorker = MainBeerWorker()) {
        self.worker = worker
    }
    
    var presenter: MainBeerPresentationLogic?
    
    func load(){
        worker.getBers().done(handleSuccess).catch(handleFailure)
    }
    
    func handleSuccess(model: [MainBeer.Beer]) {
        presenter?.showData(listBeer: model)
        listBeer = model
        presenter?.reloadTable()
    }
    
    func handleFailure(error:Error) {
        presenter?.showError()
    }
    
    func didSelectRow(indexPath: IndexPath) {
        selectedBeer = listBeer[indexPath.row]
        presenter?.routeToDetail()
    }
}
